$date
	Wed Sep  4 16:58:35 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! out $end
$var reg 1 " A $end
$var reg 1 # B $end
$var reg 2 $ control [1:0] $end
$scope module l $end
$var wire 1 " A $end
$var wire 1 # B $end
$var wire 1 % a1 $end
$var wire 2 & control [1:0] $end
$var wire 1 ' n1 $end
$var wire 1 ( o1 $end
$var wire 1 ) x1 $end
$var wire 1 ! out $end
$scope module mux_1 $end
$var wire 1 % A $end
$var wire 1 ( B $end
$var wire 1 ' C $end
$var wire 1 ) D $end
$var wire 2 * control [1:0] $end
$var wire 1 ! out $end
$var wire 1 + wA $end
$var wire 1 , wB $end
$var wire 1 - wC $end
$var wire 1 . wD $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0.
0-
0,
0+
b0 *
0)
0(
1'
b0 &
0%
b0 $
0#
0"
0!
$end
#1
1(
0'
1)
1#
#2
0#
1"
#3
1!
1+
1%
0)
1#
#4
0!
0%
0(
1'
0+
0,
0#
0"
b1 $
b1 &
b1 *
#5
1!
1,
1(
0'
1)
1#
#6
0#
1"
#7
1%
0)
1#
#8
1-
1!
0%
0(
1'
0,
0#
0"
b10 $
b10 &
b10 *
#9
0!
0-
1(
0'
1)
1#
#10
0#
1"
#11
1%
0)
1#
#12
0%
0(
1'
0#
0"
b11 $
b11 &
b11 *
#13
1!
1.
1(
0'
1)
1#
#14
0#
1"
#15
0!
0.
1%
0)
1#
